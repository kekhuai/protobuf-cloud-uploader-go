// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upload_service.proto

package uploader

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_Metadata_
	//	*Request_Chunk_
	Value                isRequest_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d5434d4c25716, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type isRequest_Value interface {
	isRequest_Value()
}

type Request_Metadata_ struct {
	Metadata *Request_Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type Request_Chunk_ struct {
	Chunk *Request_Chunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*Request_Metadata_) isRequest_Value() {}

func (*Request_Chunk_) isRequest_Value() {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetMetadata() *Request_Metadata {
	if x, ok := m.GetValue().(*Request_Metadata_); ok {
		return x.Metadata
	}
	return nil
}

func (m *Request) GetChunk() *Request_Chunk {
	if x, ok := m.GetValue().(*Request_Chunk_); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_Metadata_)(nil),
		(*Request_Chunk_)(nil),
	}
}

type Request_Metadata struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Metadata) Reset()         { *m = Request_Metadata{} }
func (m *Request_Metadata) String() string { return proto.CompactTextString(m) }
func (*Request_Metadata) ProtoMessage()    {}
func (*Request_Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d5434d4c25716, []int{0, 0}
}

func (m *Request_Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Metadata.Unmarshal(m, b)
}
func (m *Request_Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Metadata.Marshal(b, m, deterministic)
}
func (m *Request_Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Metadata.Merge(m, src)
}
func (m *Request_Metadata) XXX_Size() int {
	return xxx_messageInfo_Request_Metadata.Size(m)
}
func (m *Request_Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Metadata proto.InternalMessageInfo

func (m *Request_Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Request_Chunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Chunk) Reset()         { *m = Request_Chunk{} }
func (m *Request_Chunk) String() string { return proto.CompactTextString(m) }
func (*Request_Chunk) ProtoMessage()    {}
func (*Request_Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d5434d4c25716, []int{0, 1}
}

func (m *Request_Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Chunk.Unmarshal(m, b)
}
func (m *Request_Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Chunk.Marshal(b, m, deterministic)
}
func (m *Request_Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Chunk.Merge(m, src)
}
func (m *Request_Chunk) XXX_Size() int {
	return xxx_messageInfo_Request_Chunk.Size(m)
}
func (m *Request_Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Chunk proto.InternalMessageInfo

func (m *Request_Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d5434d4c25716, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Request_Metadata)(nil), "Request.Metadata")
	proto.RegisterType((*Request_Chunk)(nil), "Request.Chunk")
	proto.RegisterType((*Response)(nil), "Response")
}

func init() {
	proto.RegisterFile("upload_service.proto", fileDescriptor_9e0d5434d4c25716)
}

var fileDescriptor_9e0d5434d4c25716 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0xbd, 0x4e, 0x80, 0x30,
	0x14, 0x85, 0xc1, 0x08, 0x94, 0xeb, 0x4f, 0x62, 0xe3, 0x40, 0x30, 0x12, 0xc3, 0x60, 0x9c, 0x6a,
	0x82, 0x6f, 0x80, 0x0b, 0x8b, 0x4b, 0x8d, 0x8b, 0x8b, 0xa9, 0x70, 0x13, 0x8d, 0x40, 0x91, 0xb6,
	0x3c, 0x93, 0x8f, 0x69, 0xda, 0x42, 0xb7, 0x93, 0x7b, 0xbe, 0xfb, 0x77, 0xe0, 0xda, 0x2c, 0xa3,
	0x14, 0xc3, 0x87, 0xc2, 0x75, 0xfb, 0xee, 0x91, 0x2d, 0xab, 0xd4, 0xb2, 0xfe, 0x8b, 0x21, 0xe3,
	0xf8, 0x6b, 0x50, 0x69, 0xfa, 0x08, 0x64, 0x42, 0x2d, 0x06, 0xa1, 0x45, 0x11, 0xdf, 0xc5, 0x0f,
	0x67, 0xcd, 0x15, 0xdb, 0x3d, 0xf6, 0xb2, 0x1b, 0x5d, 0xc4, 0x03, 0x44, 0xef, 0x21, 0xe9, 0xbf,
	0xcc, 0xfc, 0x53, 0x9c, 0x38, 0xfa, 0x32, 0xd0, 0xcf, 0xb6, 0xda, 0x45, 0xdc, 0xdb, 0x65, 0x05,
	0xe4, 0xe8, 0xa7, 0x14, 0x4e, 0x67, 0x31, 0xa1, 0x5b, 0x90, 0x73, 0xa7, 0xcb, 0x1b, 0x48, 0x5c,
	0x87, 0x35, 0xc3, 0xf6, 0x73, 0xee, 0x74, 0x9b, 0x41, 0xb2, 0x89, 0xd1, 0x60, 0x5d, 0x01, 0xe1,
	0xa8, 0x16, 0x39, 0x2b, 0xb4, 0x60, 0x2f, 0x87, 0x30, 0xc5, 0xea, 0x86, 0xc1, 0xc5, 0x9b, 0x7b,
	0xf1, 0xd5, 0x7f, 0x48, 0x6f, 0x21, 0xf5, 0x05, 0x4a, 0x8e, 0xcb, 0xca, 0x9c, 0x1d, 0x33, 0x5a,
	0x78, 0x27, 0x3e, 0x12, 0x5c, 0x3f, 0x53, 0x97, 0xc6, 0xd3, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xef, 0x8f, 0xe6, 0x34, 0x25, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UploadServiceClient is the client API for UploadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UploadServiceClient interface {
	Upload(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type uploadServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUploadServiceClient(cc grpc.ClientConnInterface) UploadServiceClient {
	return &uploadServiceClient{cc}
}

func (c *uploadServiceClient) Upload(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/UploadService/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UploadServiceServer is the server API for UploadService service.
type UploadServiceServer interface {
	Upload(context.Context, *Request) (*Response, error)
}

// UnimplementedUploadServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUploadServiceServer struct {
}

func (*UnimplementedUploadServiceServer) Upload(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upload not implemented")
}

func RegisterUploadServiceServer(s *grpc.Server, srv UploadServiceServer) {
	s.RegisterService(&_UploadService_serviceDesc, srv)
}

func _UploadService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UploadService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadServiceServer).Upload(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _UploadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UploadService",
	HandlerType: (*UploadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upload",
			Handler:    _UploadService_Upload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upload_service.proto",
}
