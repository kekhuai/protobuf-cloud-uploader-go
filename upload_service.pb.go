// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upload_service.proto

/*
Package uploader is a generated protocol buffer package.

It is generated from these files:
	upload_service.proto

It has these top-level messages:
	Request
	Response
*/
package uploader

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	// Types that are valid to be assigned to Value:
	//	*Request_Metadata_
	//	*Request_Chunk_
	Value isRequest_Value `protobuf_oneof:"value"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isRequest_Value interface {
	isRequest_Value()
}

type Request_Metadata_ struct {
	Metadata *Request_Metadata `protobuf:"bytes,1,opt,name=metadata,oneof"`
}
type Request_Chunk_ struct {
	Chunk *Request_Chunk `protobuf:"bytes,2,opt,name=chunk,oneof"`
}

func (*Request_Metadata_) isRequest_Value() {}
func (*Request_Chunk_) isRequest_Value()    {}

func (m *Request) GetValue() isRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Request) GetMetadata() *Request_Metadata {
	if x, ok := m.GetValue().(*Request_Metadata_); ok {
		return x.Metadata
	}
	return nil
}

func (m *Request) GetChunk() *Request_Chunk {
	if x, ok := m.GetValue().(*Request_Chunk_); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_Metadata_)(nil),
		(*Request_Chunk_)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_Metadata_:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Metadata); err != nil {
			return err
		}
	case *Request_Chunk_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chunk); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.Value has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 1: // value.metadata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Request_Metadata)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Metadata_{msg}
		return true, err
	case 2: // value.chunk
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Request_Chunk)
		err := b.DecodeMessage(msg)
		m.Value = &Request_Chunk_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// value
	switch x := m.Value.(type) {
	case *Request_Metadata_:
		s := proto.Size(x.Metadata)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_Chunk_:
		s := proto.Size(x.Chunk)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Request_Metadata struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Request_Metadata) Reset()                    { *m = Request_Metadata{} }
func (m *Request_Metadata) String() string            { return proto.CompactTextString(m) }
func (*Request_Metadata) ProtoMessage()               {}
func (*Request_Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Request_Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Request_Chunk struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Request_Chunk) Reset()                    { *m = Request_Chunk{} }
func (m *Request_Chunk) String() string            { return proto.CompactTextString(m) }
func (*Request_Chunk) ProtoMessage()               {}
func (*Request_Chunk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Request_Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Request_Metadata)(nil), "Request.Metadata")
	proto.RegisterType((*Request_Chunk)(nil), "Request.Chunk")
	proto.RegisterType((*Response)(nil), "Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UploadService service

type UploadServiceClient interface {
	Upload(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type uploadServiceClient struct {
	cc *grpc.ClientConn
}

func NewUploadServiceClient(cc *grpc.ClientConn) UploadServiceClient {
	return &uploadServiceClient{cc}
}

func (c *uploadServiceClient) Upload(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/UploadService/Upload", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UploadService service

type UploadServiceServer interface {
	Upload(context.Context, *Request) (*Response, error)
}

func RegisterUploadServiceServer(s *grpc.Server, srv UploadServiceServer) {
	s.RegisterService(&_UploadService_serviceDesc, srv)
}

func _UploadService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UploadServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UploadService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UploadServiceServer).Upload(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _UploadService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UploadService",
	HandlerType: (*UploadServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upload",
			Handler:    _UploadService_Upload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "upload_service.proto",
}

func init() { proto.RegisterFile("upload_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2d, 0xc8, 0xc9,
	0x4f, 0x4c, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x57, 0x5a, 0xc1, 0xc8, 0xc5, 0x1e, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xa4, 0xcf, 0xc5,
	0x91, 0x9b, 0x5a, 0x92, 0x98, 0x92, 0x58, 0x92, 0x28, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0x24,
	0xa8, 0x07, 0x95, 0xd3, 0xf3, 0x85, 0x4a, 0x78, 0x30, 0x04, 0xc1, 0x15, 0x09, 0xa9, 0x71, 0xb1,
	0x26, 0x67, 0x94, 0xe6, 0x65, 0x4b, 0x30, 0x81, 0x55, 0xf3, 0xc1, 0x55, 0x3b, 0x83, 0x44, 0x81,
	0x4a, 0x21, 0xd2, 0x52, 0x72, 0x5c, 0x1c, 0x30, 0xfd, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9,
	0xa9, 0x60, 0x0b, 0x38, 0x83, 0xc0, 0x6c, 0x29, 0x69, 0x2e, 0x56, 0xb0, 0x0e, 0x90, 0x24, 0xdc,
	0x76, 0x9e, 0x20, 0x30, 0xdb, 0x89, 0x9d, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55, 0x09, 0x68,
	0x4a, 0x50, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48, 0x61, 0x72, 0x7e, 0x0a, 0xdc, 0x14,
	0x10, 0xdb, 0x48, 0x8f, 0x8b, 0x37, 0x14, 0xec, 0xc5, 0x60, 0x88, 0x0f, 0x85, 0x64, 0xb9, 0xd8,
	0x20, 0x02, 0x42, 0x1c, 0x30, 0x97, 0x49, 0x71, 0xea, 0xc1, 0xcc, 0x70, 0xe2, 0x8a, 0xe2, 0x80,
	0x04, 0x49, 0x6a, 0x51, 0x12, 0x1b, 0x38, 0x34, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xef,
	0x8f, 0xe6, 0x34, 0x25, 0x01, 0x00, 0x00,
}
